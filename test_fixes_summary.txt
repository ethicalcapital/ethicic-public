Summary of Test Fixes for Site.DoesNotExist Errors
==================================================

Root Cause:
Tests were failing with "Site.DoesNotExist: Site matching query does not exist" because they were using Django's TestCase instead of WagtailTestCase, which properly sets up the required Wagtail Site objects.

Files Updated:

1. /Users/srvo/ethicic-public/public_site/tests/test_views_expanded.py
   Updated from TestCase to WagtailTestCase:
   - ViewsGardenTest
   - ViewsPageTest
   - ViewsContactFormTest
   - ViewsNewsletterTest
   - ViewsOnboardingTest
   - ViewsAPITest
   - ViewsIntegrationTest
   - ViewsErrorHandlingTest
   - ViewsSecurityTest

2. /Users/srvo/ethicic-public/public_site/tests/test_views_comprehensive.py
   Updated from TestCase to WagtailTestCase:
   - HomeViewTest
   - NewsletterSignupViewTest
   - ContactFormViewTest
   - APIViewTest
   - ViewIntegrationTest

3. /Users/srvo/ethicic-public/public_site/tests/views/test_htmx_views.py
   Updated from BasePublicSiteTestCase to WagtailPublicSiteTestCase:
   - HTMXSearchViewTest
   - HTMXContactFormTest
   - HTMXNewsletterFormTest
   - HTMXOnboardingFormTest
   - HTMXLiveStatsTest
   - HTMXNotificationsTest
   - HTMXEmailValidationTest

4. /Users/srvo/ethicic-public/public_site/tests/integration/test_onboarding_form_integration.py
   Updated OnboardingFormPerformanceTest from BasePublicSiteTestCase to WagtailPublicSiteTestCase

Key Changes:
- Changed class inheritance to use Wagtail test base classes
- Added super().setUp() calls in setUp methods
- Ensured proper Site and Page setup for tests that render templates

The remaining TestCase classes were left unchanged as they test functionality that doesn't require Wagtail pages or Site objects (error handlers, utilities, etc.).
