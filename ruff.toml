# Ruff configuration for Ethical Capital
# Enhanced security and quality standards for financial software

# Target Python 3.9+ for modern features
target-version = "py39"
line-length = 88

[lint]
# Enable comprehensive rule sets for financial software
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "S",    # flake8-bandit (security)
    "B",    # flake8-bugbear (common bugs)
    "C90",  # mccabe complexity
    "I",    # isort imports
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "PL",   # pylint
    "PT",   # pytest-style
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "ERA",  # eradicate (commented code)
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "ARG",  # flake8-unused-arguments
    "DTZ",  # flake8-datetimez
    "PERF", # perflint
]

# Ignore specific rules that conflict with Django patterns
ignore = [
    "S101",    # Use of assert (common in tests)
    "S311",    # Random generators (OK for non-crypto use)
    "PLR0913", # Too many arguments (Django views often need many)
    "PLR2004", # Magic values (Django settings often have these)
    "T201",    # print statements (allow for debugging)
    "ERA001",  # commented code (sometimes needed for reference)
    "ARG002",  # Unused method arguments (often interface requirements)
]

# File-specific ignores
[lint.per-file-ignores]
"**/migrations/*.py" = ["ALL"]  # Django migrations can be messy
"**/tests/*.py" = ["S101", "PLR2004", "ARG001", "S106"]  # Tests have different patterns
"**/settings/*.py" = ["S105", "S106"]  # Settings may have dummy secrets
"**/management/commands/*.py" = ["S106", "C901", "PLR0915", "PLR0912", "PLR0911", "S608", "PERF203", "PERF401", "E501"]  # Setup commands are complex by nature and contain long content strings
"**/views.py" = ["C901", "PLR0911", "E501"]  # Django views can be complex with multiple return paths and long strings
"**/views_*.py" = ["C901", "PLR0915"]  # Django views can be complex
"scripts/*.py" = ["PLR0915"]  # Scripts can be long
"**/templatetags/*.py" = ["C901", "S308", "PERF401", "PLR0912", "E501"]  # Template tags can be complex, use mark_safe, performance not critical, long strings
"ethicic/urls.py" = ["C901", "PLR0915", "PLR0912", "ARG001", "B904", "E501"]  # URL patterns are complex with exception handling
"ethicic/settings*.py" = ["S105", "S106", "S110", "E501"]  # Settings files have special requirements
"manage.py" = ["T201"]  # Django manage.py uses print
"css_monitoring.py" = ["E501"]  # CSS monitoring has long strings
"**/admin*.py" = ["E501", "ARG001", "PLR0912"]  # Admin files often have long strings and complex logic
"**/blocks*.py" = ["E501"]  # Block files have long HTML strings
"**/database_config.py" = ["E501", "PERF401"]  # Database config has special patterns
"**/views*.py" = ["ARG001", "PLR0912"]  # Views often have unused request params and complex logic
"**/urls*.py" = ["ARG001", "B904", "E501", "PLR0912"]  # URL views often have unused params and exception handling
"generate_*.py" = ["C901", "S603", "S607", "E501"]  # Generator scripts can be complex and use subprocess
"**/wagtail_hooks*.py" = ["C901", "E501", "ARG001", "PLR0912"]  # Wagtail hooks are complex
"**/services/*.py" = ["ARG001", "E501"]  # Service files often have unused params
"**/standalone*.py" = ["S104", "S105", "S106", "S311", "S603", "S607"]  # Standalone scripts have different security needs
"**/middleware.py" = ["ARG001"]  # Middleware often has unused params
"**/forms.py" = ["C901", "PLR0912", "E501"]  # Forms can be complex with long help text
"**/cloudflare*.py" = ["E501", "B904"]  # Cloudflare integration has long strings and exception handling
"run_*.py" = ["S603", "S607"]  # Run scripts use subprocess
"**/models*.py" = ["E501", "ARG001"]  # Model files have long strings and method signatures
"**/db_router.py" = ["E501"]  # Database router has long comments
"**/admin_panels*.py" = ["S308", "E501"]  # Admin panels use mark_safe and have long strings
"**/views_with_crm_deps.py" = ["PERF401", "E501"]  # CRM integration has performance patterns and long strings
"**/homepage_view.py" = ["E501"]  # Homepage view has long content strings
"**/views_ai_analysis_backup/*.py" = ["E501"]  # AI analysis backup views have long strings

[lint.mccabe]
max-complexity = 8  # Lower complexity for financial code

[lint.pylint]
max-args = 6
max-statements = 40
max-returns = 5
max-branches = 10

[format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

# Exclude common non-Python files
exclude = [
    "node_modules",
    ".venv",
    "staticfiles",
    "migrations",
    "__pycache__",
    ".git",
]
