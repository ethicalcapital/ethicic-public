# Generated by Django 5.1.5 on 2025-07-05 23:22

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("public_site", "0002_add_performance_indexes"),
    ]

    operations = [
        # Support Ticket constraints
        migrations.RunSQL(
            """
            ALTER TABLE public_site_supportticket
            ADD CONSTRAINT chk_ticket_status_valid
            CHECK (status IN ('open', 'in_progress', 'resolved', 'closed'));
            """,
            reverse_sql="ALTER TABLE public_site_supportticket DROP CONSTRAINT IF EXISTS chk_ticket_status_valid;",
            state_operations=[],
        ),
        migrations.RunSQL(
            """
            ALTER TABLE public_site_supportticket
            ADD CONSTRAINT chk_ticket_priority_valid
            CHECK (priority IN ('low', 'medium', 'high', 'urgent'));
            """,
            reverse_sql="ALTER TABLE public_site_supportticket DROP CONSTRAINT IF EXISTS chk_ticket_priority_valid;",
            state_operations=[],
        ),
        migrations.RunSQL(
            """
            ALTER TABLE public_site_supportticket
            ADD CONSTRAINT chk_ticket_type_valid
            CHECK (ticket_type IN ('question', 'issue', 'request', 'feedback', 'newsletter'));
            """,
            reverse_sql="ALTER TABLE public_site_supportticket DROP CONSTRAINT IF EXISTS chk_ticket_type_valid;",
            state_operations=[],
        ),
        migrations.RunSQL(
            """
            ALTER TABLE public_site_supportticket
            ADD CONSTRAINT chk_ticket_dates_logical
            CHECK (updated_at >= created_at);
            """,
            reverse_sql="ALTER TABLE public_site_supportticket DROP CONSTRAINT IF EXISTS chk_ticket_dates_logical;",
            state_operations=[],
        ),
        # FAQ priority constraint
        migrations.RunSQL(
            """
            ALTER TABLE public_site_faqarticle
            ADD CONSTRAINT chk_faq_priority_positive
            CHECK (priority >= 0);
            """,
            reverse_sql="ALTER TABLE public_site_faqarticle DROP CONSTRAINT IF EXISTS chk_faq_priority_positive;",
            state_operations=[],
        ),
        migrations.RunSQL(
            """
            ALTER TABLE public_site_faqitem
            ADD CONSTRAINT chk_faqitem_sort_order_positive
            CHECK (sort_order >= 0);
            """,
            reverse_sql="ALTER TABLE public_site_faqitem DROP CONSTRAINT IF EXISTS chk_faqitem_sort_order_positive;",
            state_operations=[],
        ),
        # Email validation constraints
        migrations.RunSQL(
            """
            ALTER TABLE public_site_supportticket
            ADD CONSTRAINT chk_email_format
            CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$');
            """,
            reverse_sql="ALTER TABLE public_site_supportticket DROP CONSTRAINT IF EXISTS chk_email_format;",
            state_operations=[],
        ),
        # Strategy page specific constraints
        migrations.RunSQL(
            """
            ALTER TABLE public_site_strategypage
            ADD CONSTRAINT chk_inception_date_reasonable
            CHECK (inception_date >= '2000-01-01' AND inception_date <= CURRENT_DATE);
            """,
            reverse_sql="ALTER TABLE public_site_strategypage DROP CONSTRAINT IF EXISTS chk_inception_date_reasonable;",
            state_operations=[],
        ),
    ]
