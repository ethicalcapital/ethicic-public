# Generated by Django 5.1.5 on 2025-07-02 21:14

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.blocks
import wagtail.contrib.routable_page.models
import wagtail.contrib.table_block.blocks
import wagtail.fields
import wagtail.images.blocks
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("public_site", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AboutPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "headshot_image",
                    models.URLField(
                        blank=True,
                        default="https://pub-324a685032214395a8bcad478c265d4b.r2.dev/headshot%20sketch_slim.png",
                        help_text="URL to headshot image",
                    ),
                ),
                (
                    "headshot_alt_text",
                    models.CharField(
                        blank=True,
                        default="Sloane Ortel, Chief Investment Officer & Founder",
                        help_text="Alt text for headshot image",
                        max_length=200,
                    ),
                ),
                (
                    "philosophy_quote",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default='<p>"There is no checklist comprehensive enough to rely upon. You have to pay attention."</p>',
                        help_text="Philosophy quote in the hero section",
                    ),
                ),
                (
                    "philosophy_quote_link",
                    models.CharField(
                        blank=True,
                        default="/blog/how-i-became-an-active-manager/",
                        help_text="Link for the philosophy quote attribution (can be relative or absolute URL)",
                        max_length=500,
                    ),
                ),
                (
                    "philosophy_quote_link_text",
                    models.CharField(
                        blank=True,
                        default="How I Became an Active Manager â†’",
                        help_text="Text for the philosophy quote link",
                        max_length=200,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        default="Sloane Ortel (she/her)",
                        help_text="Name and pronouns",
                        max_length=200,
                    ),
                ),
                (
                    "professional_title",
                    models.CharField(
                        blank=True,
                        default="Chief Investment Officer & Founder",
                        help_text="Professional title",
                        max_length=200,
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(
                        blank=True, default="https://www.linkedin.com/in/srvo0/"
                    ),
                ),
                (
                    "twitter_url",
                    models.URLField(
                        blank=True, default="https://twitter.com/sloaneortel"
                    ),
                ),
                (
                    "bluesky_url",
                    models.URLField(
                        blank=True,
                        default="https://bsky.app/profile/sloaneortel.bsky.social",
                    ),
                ),
                (
                    "instagram_url",
                    models.URLField(
                        blank=True, default="https://instagram.com/sloaneortel"
                    ),
                ),
                (
                    "tiktok_url",
                    models.URLField(
                        blank=True, default="https://tiktok.com/@ethicalcapital"
                    ),
                ),
                (
                    "calendar_url",
                    models.URLField(blank=True, default="https://tidycal.com/ecic"),
                ),
                (
                    "sec_info_url",
                    models.URLField(
                        blank=True,
                        default="https://adviserinfo.sec.gov/individual/summary/5388169",
                    ),
                ),
                (
                    "professional_background_title",
                    models.CharField(
                        blank=True,
                        default="Professional Background",
                        help_text="Title for professional background section",
                        max_length=200,
                    ),
                ),
                (
                    "professional_background_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Sloane started working in investment management right after high school, gaining experience at a regional brokerage firm and a Bangalore-based family office. She joined CFA Institute staff while still in college and spent nearly a decade creating educational materials for investment professionals, developing deep expertise in investment analysis and ethical investing practices.</p><p>Now at the center of the Ethical Capital Investment Collaborative, she translates insights from clients, colleagues, and research into investment strategies, focusing on understanding companies, the communities they serve, and the consequences of their activities.</p>",
                        help_text="Professional background content",
                    ),
                ),
                (
                    "external_roles_title",
                    models.CharField(
                        blank=True,
                        default="External Roles & Leadership",
                        help_text="Title for external roles section",
                        max_length=200,
                    ),
                ),
                (
                    "external_roles_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default='<ul class="external-roles"><li><strong>Co-founder</strong> - Woodcache Public Benefit Corporation</li><li><strong>Board Member</strong> - Responsible Alpha</li><li><strong>Co-host</strong> - "Free Money with Sloane and Ashby" podcast</li></ul>',
                        help_text="External roles and leadership content",
                    ),
                ),
                (
                    "speaking_writing_title",
                    models.CharField(
                        blank=True,
                        default="Speaking & Writing",
                        help_text="Title for speaking & writing section",
                        max_length=200,
                    ),
                ),
                (
                    "speaking_writing_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default='<p>Sloane offers keynote addresses and panel discussions on topics including ethical investing, portfolio management, and sustainable finance. She has written a textbook on investment idea generation and writes extensively about sustainable investing and financial values. Her insights have been featured in <a href="/media/" class="garden-action secondary">numerous media outlets</a>.</p>',
                        help_text="Speaking & writing content",
                    ),
                ),
                (
                    "speaking_cta_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>For speaking engagements and media inquiries:</p>",
                        help_text="Call-to-action text for speaking section",
                    ),
                ),
                (
                    "speaking_contact_note",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p><em>Fair warning: my Achilles heel is email. If you need me, your best bet is to get on my calendar.</em></p>",
                        help_text="Contact note for speaking section",
                    ),
                ),
                (
                    "calendar_link",
                    models.URLField(
                        blank=True,
                        default="https://tidycal.com/ecic",
                        help_text="Calendar booking link",
                    ),
                ),
                (
                    "calendar_link_text",
                    models.CharField(
                        blank=True,
                        default="Schedule with Sloane",
                        help_text="Text for calendar link",
                        max_length=200,
                    ),
                ),
                (
                    "email_link",
                    models.EmailField(
                        blank=True,
                        default="hello@ethicic.com",
                        help_text="Contact email address",
                        max_length=254,
                    ),
                ),
                (
                    "email_link_text",
                    models.CharField(
                        blank=True,
                        default="Or try email",
                        help_text="Text for email link",
                        max_length=200,
                    ),
                ),
                (
                    "personal_interests_title",
                    models.CharField(
                        blank=True,
                        default="Personal Interests",
                        help_text="Title for personal interests section",
                        max_length=200,
                    ),
                ),
                (
                    "personal_interests_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>When not managing portfolios, Sloane skis in Utah and replaces lawn with wildlife-friendly perennials, reflecting her appreciation for both adventure and the natural world that ethical investing seeks to protect.</p>",
                        help_text="Personal interests content",
                    ),
                ),
            ],
            options={
                "verbose_name": "About Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="AdvisorPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        blank=True,
                        default="Partner with Ethical Capital",
                        max_length=200,
                    ),
                ),
                (
                    "hero_subtitle",
                    models.CharField(
                        blank=True,
                        default="Deep research expertise and proven strategies to help you serve clients with complex values and sophisticated needs",
                        max_length=300,
                    ),
                ),
                (
                    "hero_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>As investment advisers ourselves, we understand the challenges of serving clients who want their portfolios to align with their principles. We provide the specialized research, proven strategies, and easy access you need to deliver exceptional outcomes.</p>",
                    ),
                ),
                (
                    "services_title",
                    models.CharField(
                        blank=True, default="Advisory Services", max_length=200
                    ),
                ),
                (
                    "services_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We provide investment advisers with specialized expertise in niche and ethical investing, rigorous analytical processes, effective client communication support, operational assistance, and educational resources to help you serve clients with complex needs and values.</p>",
                    ),
                ),
                (
                    "benefits_title",
                    models.CharField(
                        blank=True, default="Why Partner With Us", max_length=200
                    ),
                ),
                (
                    "benefits_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<h4>Expertise in Niche and Ethical Investing</h4><p>Deep knowledge and specialized focus on sustainable and ethical investing. Our in-house ethical screening goes beyond standard third-party data, offering rigorous transparency that distinguishes us from conventional options.</p><h4>Rigorous Analytical Process</h4><p>Systematic approach to investment analysis with proprietary screening of thousands of companies using our 'Tick' rating system, ensuring strategies are both ethically aligned and financially sound.</p><h4>Effective Client Communication</h4><p>High closing rates with prospective clients through clear communication of complex financial concepts and personal engagement, helping manage the emotional aspects of investing.</p><h4>Operational Support</h4><p>Experience with platforms like Altruist and Schwab, streamlining account opening, transfers, and SMA implementation for busy advisers.</p><h4>Educational Partnership</h4><p>Trusted thought partner providing consulting, ad-hoc analysis, and insights to help you navigate challenging client scenarios and develop expertise in ethical investing.</p>",
                    ),
                ),
                (
                    "technology_title",
                    models.CharField(
                        blank=True, default="Technology Platform", max_length=200
                    ),
                ),
                (
                    "technology_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Access our comprehensive platform for portfolio construction, compliance monitoring, and client reporting.</p>",
                    ),
                ),
                (
                    "cta_title",
                    models.CharField(
                        blank=True, default="Ready to Partner?", max_length=200
                    ),
                ),
                (
                    "cta_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Join leading investment advisers who trust our multi-faceted approach to help them serve a broader range of clients with complex needs and values more effectively.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Adviser Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="BlogIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>In-depth research and analysis on ethical investing, portfolio construction, and sustainable finance strategies.</p>",
                    ),
                ),
                (
                    "description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>I provide actionable research insights to help you make informed investment decisions that align with your values and financial goals.</p>",
                    ),
                ),
                (
                    "display_title",
                    models.CharField(
                        blank=True,
                        help_text="Optional custom title to display on the page (if blank, uses the page title)",
                        max_length=255,
                    ),
                ),
                (
                    "featured_title",
                    models.CharField(
                        blank=True, default="Featured Research", max_length=200
                    ),
                ),
                (
                    "featured_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Essential research findings and market insights for ethical investing.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blog Index Page",
            },
            bases=(
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="CompliancePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro_text", wagtail.fields.RichTextField(blank=True)),
                ("content", wagtail.fields.RichTextField()),
                (
                    "document_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("form_adv", "Form ADV"),
                            ("exclusion_list", "Exclusion List"),
                            ("compliance_policy", "Compliance Policy"),
                            ("disclosure", "Disclosure Document"),
                        ],
                        max_length=100,
                    ),
                ),
                ("effective_date", models.DateField(blank=True, null=True)),
                (
                    "version",
                    models.CharField(
                        blank=True, help_text="Document version", max_length=20
                    ),
                ),
            ],
            options={
                "verbose_name": "Compliance Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ConsultationPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        default="Schedule a Consultation",
                        help_text="Main headline",
                        max_length=200,
                    ),
                ),
                (
                    "hero_subtitle",
                    models.TextField(
                        default="Let's discuss how we can help align your investments with your values.",
                        help_text="Subtitle text below the main headline",
                        max_length=500,
                    ),
                ),
                (
                    "introduction",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Introduction text explaining the consultation process",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        default="hello@ec1c.com",
                        help_text="Contact email for consultations",
                        max_length=254,
                    ),
                ),
                (
                    "scheduling_embed_code",
                    models.TextField(
                        blank=True,
                        help_text="Optional: Embed code for scheduling widget (Calendly, etc.)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Consultation Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ContactFormPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Have a question? We're here to help. Send us a message and we'll get back to you soon.</p>",
                    ),
                ),
                (
                    "form_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Please provide as much detail as possible so we can assist you effectively.</p>",
                    ),
                ),
                (
                    "thank_you_title",
                    models.CharField(blank=True, default="Thank You!", max_length=200),
                ),
                (
                    "thank_you_message",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We've received your message and will respond within 1-2 business days.</p>",
                    ),
                ),
                ("enable_form", models.BooleanField(default=True)),
                (
                    "require_phone",
                    models.BooleanField(
                        default=False, help_text="Require phone number field"
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Form Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ContactPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Ready to transform your investment research and compliance workflow?</p>",
                    ),
                ),
                ("contact_description", wagtail.fields.RichTextField(blank=True)),
                (
                    "email",
                    models.EmailField(
                        blank=True, default="hello@ethicic.com", max_length=254
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("address", wagtail.fields.RichTextField(blank=True)),
                (
                    "show_contact_form",
                    models.BooleanField(
                        default=True, help_text="Show the contact form on this page"
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact Page",
            },
            bases=(
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="CriteriaPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        default="Our Ethical Criteria",
                        help_text="Main headline",
                        max_length=200,
                    ),
                ),
                (
                    "hero_subtitle",
                    models.TextField(
                        default="Transparent, rigorous screening criteria that guide our investment decisions.",
                        help_text="Subtitle text below the main headline",
                        max_length=500,
                    ),
                ),
                (
                    "criteria_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Description of the criteria and screening process",
                    ),
                ),
                (
                    "github_criteria_url",
                    models.URLField(
                        default="https://github.com/ethicalcapital/sage/blob/main/screening_policy.md",
                        help_text="URL to GitHub screening policy",
                    ),
                ),
                (
                    "additional_resources",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Links to additional resources and documentation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Criteria Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="EncyclopediaEntry",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        help_text="Brief summary shown on index page (max 500 characters)",
                        max_length=500,
                    ),
                ),
                (
                    "detailed_content",
                    wagtail.fields.RichTextField(
                        help_text="Detailed explanation of the term"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("risk", "Risk Management"),
                            ("strategy", "Investment Strategy"),
                            ("instruments", "Financial Instruments"),
                            ("analysis", "Analysis & Research"),
                            ("ethics", "Ethical Investing"),
                            ("markets", "Markets & Trading"),
                            ("regulation", "Regulation & Compliance"),
                            ("general", "General Finance"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "related_terms",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of related terms",
                        max_length=500,
                    ),
                ),
                (
                    "difficulty_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        default="beginner",
                        max_length=20,
                    ),
                ),
                (
                    "examples",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Examples and use cases"
                    ),
                ),
                (
                    "further_reading",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Links to additional resources"
                    ),
                ),
            ],
            options={
                "verbose_name": "Encyclopedia Entry",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="EncyclopediaIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Comprehensive investment terminology and concepts explained in plain language.</p>",
                    ),
                ),
                (
                    "description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Our Investment Encyclopedia provides clear, accessible explanations of key investment terms and concepts. Whether you're new to investing or looking to expand your knowledge, this resource helps you understand the language of finance and ethical investing.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Encyclopedia Index Page",
            },
            bases=(
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="FAQArticle",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "summary",
                    models.TextField(
                        blank=True,
                        help_text="Brief summary shown on index page (max 500 characters)",
                        max_length=500,
                    ),
                ),
                (
                    "content",
                    wagtail.fields.RichTextField(help_text="Detailed article content"),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("account", "Account Management & Setup"),
                            ("investment", "Investment Philosophy & Options"),
                            ("planning", "Financial Planning & Education"),
                            ("company", "Company Information"),
                            ("help", "Help & Insight"),
                            ("altruist", "Altruist Platform"),
                            ("general", "General Questions"),
                            ("ethical_capital", "Ethical Capital Philosophy"),
                            ("how_we_invest", "How We Invest"),
                            ("investing_101", "Investing 101"),
                            ("big_questions", "Big Questions"),
                            ("investment_approach", "Investment Approach & Philosophy"),
                            ("esg_integration", "ESG Integration & Analysis"),
                            ("stewardship", "Stewardship & Engagement"),
                            ("reporting", "Reporting & Verification"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0, help_text="Higher numbers appear first"
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False, help_text="Feature this article"
                    ),
                ),
                (
                    "related_articles",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of related article titles",
                        max_length=500,
                    ),
                ),
                (
                    "keywords",
                    models.CharField(
                        blank=True,
                        help_text="Keywords for search and SEO",
                        max_length=300,
                    ),
                ),
            ],
            options={
                "verbose_name": "FAQ Article",
                "ordering": ["-priority", "title"],
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="FAQIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Find answers to frequently asked questions about Ethical Capital Investment Collaborative.</p>",
                    ),
                ),
                (
                    "description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Our comprehensive FAQ section provides detailed answers to help you understand our investment approach, account management, and ethical screening process.</p>",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, default="hello@ethicic.com", max_length=254
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, default="+1 347 625 9000", max_length=20
                    ),
                ),
                (
                    "contact_address",
                    models.CharField(
                        blank=True,
                        default="90 N 400 E, Provo, UT, 84606",
                        max_length=300,
                    ),
                ),
                (
                    "meeting_link",
                    models.URLField(blank=True, default="https://tidycal.com/ecic"),
                ),
            ],
            options={
                "verbose_name": "FAQ Index Page",
            },
            bases=(
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="FAQPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Frequently asked questions about the Garden Platform.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "FAQ Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_tagline",
                    models.CharField(
                        blank=True,
                        default="We're not like other firms. Good.",
                        max_length=100,
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        default="Concentrated ethical portfolios for investors who refuse to compromise",
                        help_text="Main homepage headline",
                        max_length=300,
                    ),
                ),
                (
                    "hero_subtitle",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We hand-screen thousands of companies, exclude 57% of the S&P 500*, and build high-conviction portfolios where ethics and excellence converge. Fully transparent. Radically different. Fiduciary always.</p>",
                        help_text="Hero description text",
                    ),
                ),
                (
                    "excluded_percentage",
                    models.CharField(
                        blank=True,
                        default="57%",
                        help_text="Percentage of S&P 500 excluded",
                        max_length=10,
                    ),
                ),
                (
                    "since_year",
                    models.CharField(
                        blank=True,
                        default="SINCE 2021",
                        help_text="Year established or founding info",
                        max_length=20,
                    ),
                ),
                (
                    "philosophy_title",
                    models.CharField(
                        blank=True, default="Ethics Reveal Quality", max_length=200
                    ),
                ),
                (
                    "philosophy_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We view ethical screening not as a limitation, but a luxury. Eliminating low-quality companies upfront reveals something profound: the businesses that survive our scrutiny are those woven into the fabric of healthy social systems. They grow because communities need them to grow. They succeed through reciprocal value exchange, not extraction. This insight that ethics reveal quality creates portfolios radically different from the market at large.</p>",
                        help_text="Investment philosophy description",
                    ),
                ),
                (
                    "philosophy_highlight",
                    models.CharField(
                        blank=True,
                        default="When ethics and excellence converge, sustainable investing outcomes follow.",
                        help_text="Key philosophy statement",
                        max_length=300,
                    ),
                ),
                (
                    "philosophy_section_header",
                    models.CharField(
                        blank=True,
                        default="OUR INVESTMENT PHILOSOPHY",
                        help_text="Section header for investment philosophy",
                        max_length=100,
                    ),
                ),
                (
                    "principles_section_header",
                    models.CharField(
                        blank=True,
                        default="PRINCIPLES THAT GUIDE OUR WORK",
                        help_text="Section header for principles",
                        max_length=100,
                    ),
                ),
                (
                    "strategies_section_header",
                    models.CharField(
                        blank=True,
                        default="THREE CORE STRATEGIESâ€”MULTIPLE PATHS FORWARD",
                        help_text="Section header for strategies",
                        max_length=100,
                    ),
                ),
                (
                    "process_section_header",
                    models.CharField(
                        blank=True,
                        default="OUR SIGNATURE PROCESS",
                        help_text="Section header for process",
                        max_length=100,
                    ),
                ),
                (
                    "serve_section_header",
                    models.CharField(
                        blank=True,
                        default="WHO WE SERVE",
                        help_text="Section header for who we serve",
                        max_length=100,
                    ),
                ),
                (
                    "cta_section_header",
                    models.CharField(
                        blank=True,
                        default="BEGIN YOUR ETHICAL INVESTMENT JOURNEY",
                        help_text="Section header for call to action",
                        max_length=100,
                    ),
                ),
                (
                    "principles_intro",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Sophisticated ethical investing requires both conviction and nuance. These principles shape how we serve investors who refuse to compromise.</p>",
                    ),
                ),
                (
                    "process_principle_1_title",
                    models.CharField(
                        blank=True,
                        default="Institutional Rigor, Boutique Attention",
                        max_length=100,
                    ),
                ),
                (
                    "process_principle_1_content",
                    models.TextField(
                        blank=True,
                        default="We combine analytical depth with personalized service. Every holding is hand-researched, every client relationship carefully tended.",
                    ),
                ),
                (
                    "process_principle_2_title",
                    models.CharField(
                        blank=True, default="Radical Transparency", max_length=100
                    ),
                ),
                (
                    "process_principle_2_content",
                    models.TextField(
                        blank=True,
                        default="Our exclusion criteria are open source. Our process is documented. Our reasoning is clear. You deserve to understand exactly what you own and why.",
                    ),
                ),
                (
                    "process_principle_3_title",
                    models.CharField(
                        blank=True,
                        default="High-Conviction Concentration",
                        max_length=100,
                    ),
                ),
                (
                    "process_principle_3_content",
                    models.TextField(
                        blank=True,
                        default="We maintain focused portfolios of 15-25 companies. Depth of research over breadth of holdings.",
                    ),
                ),
                (
                    "practice_principle_1_title",
                    models.CharField(
                        blank=True, default="Continuous Evolution", max_length=100
                    ),
                ),
                (
                    "practice_principle_1_content",
                    models.TextField(
                        blank=True,
                        default="Ethics is not static. As companies evolve and disappoint we adapt. Our screening is a living framework, refined through ongoing research and client dialogue.",
                    ),
                ),
                (
                    "practice_principle_2_title",
                    models.CharField(
                        blank=True, default="Intellectual Honesty", max_length=100
                    ),
                ),
                (
                    "practice_principle_2_content",
                    models.TextField(
                        blank=True,
                        default="We acknowledge uncertainty, learn from mistakes, and evolve our approach. Humility serves our clients better than false certainty.",
                    ),
                ),
                (
                    "practice_principle_3_title",
                    models.CharField(
                        blank=True, default="Business-Focused Investing", max_length=100
                    ),
                ),
                (
                    "practice_principle_3_content",
                    models.TextField(
                        blank=True,
                        default="We invest in companies, not stories. Real businesses with proven models, sustainable advantages, and ethical operations.",
                    ),
                ),
                (
                    "strategies_intro",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Each strategy offers a different approach to ethical investing, with varying levels of diversification and implementation.</p>",
                    ),
                ),
                (
                    "process_title",
                    models.CharField(
                        blank=True,
                        default="How We Build Ethical Portfolios",
                        max_length=200,
                    ),
                ),
                (
                    "process_step_1_title",
                    models.CharField(
                        blank=True,
                        default="Comprehensive Ethical Screening",
                        max_length=100,
                    ),
                ),
                (
                    "process_step_1_content",
                    models.TextField(
                        blank=True,
                        default="We begin where others end. Our multi-factor screening excludes companies involved in fossil fuels, weapons, tobacco, human rights violations, and those failing our governance standards. This is not performative it is foundational.",
                    ),
                ),
                (
                    "process_step_2_title",
                    models.CharField(
                        blank=True, default="Fundamental Analysis", max_length=100
                    ),
                ),
                (
                    "process_step_2_content",
                    models.TextField(
                        blank=True,
                        default="Beyond exclusions, we seek quality. Every company is evaluated through six lenses: People, Product, Execution, Valuation, Moat, and Risk. We combine traditional analysis with proprietary research tools to identify companies worthy of inclusion.",
                    ),
                ),
                (
                    "process_step_3_title",
                    models.CharField(
                        blank=True, default="Portfolio Construction", max_length=100
                    ),
                ),
                (
                    "process_step_3_content",
                    models.TextField(
                        blank=True,
                        default="From thousands screened to dozens analyzed to 15-25 owned. Each position is sized based on conviction, quality, and risk contribution. The result: high-conviction portfolios you can understand completely.",
                    ),
                ),
                (
                    "process_step_4_title",
                    models.CharField(
                        blank=True,
                        default="Continuous Monitoring and Evolution",
                        max_length=100,
                    ),
                ),
                (
                    "process_step_4_content",
                    models.TextField(
                        blank=True,
                        default="Markets change. Companies evolve. Values clarify. We monitor holdings continuously, engage with clients regularly, and adapt portfolios thoughtfully. Your investments should always align with both your values and your circumstances.",
                    ),
                ),
                (
                    "serve_individual_title",
                    models.CharField(
                        blank=True, default="Individuals and Families", max_length=100
                    ),
                ),
                (
                    "serve_individual_content",
                    models.TextField(
                        blank=True,
                        default="Investors seeking genuine ethical alignment with professional portfolio management and sustainable investing outcomes.",
                    ),
                ),
                (
                    "serve_advisor_title",
                    models.CharField(
                        blank=True, default="Financial Advisers", max_length=100
                    ),
                ),
                (
                    "serve_advisor_content",
                    models.TextField(
                        blank=True,
                        default="RIAs and wealth managers looking for high-conviction ethical investment strategies for their clients.",
                    ),
                ),
                (
                    "serve_institution_title",
                    models.CharField(
                        blank=True,
                        default="Institutions and Foundations",
                        max_length=100,
                    ),
                ),
                (
                    "serve_institution_content",
                    models.TextField(
                        blank=True,
                        default="Endowments, foundations, and family offices requiring documented ethical frameworks and fiduciary implementation.",
                    ),
                ),
                (
                    "cta_title",
                    models.CharField(
                        blank=True,
                        default="Ready to align your wealth with your values?",
                        max_length=200,
                    ),
                ),
                (
                    "cta_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We work with a select number of clients who share our commitment to ethical excellence.</p>",
                    ),
                ),
                (
                    "minimum_investment_text",
                    models.CharField(
                        blank=True, default="Available upon request", max_length=100
                    ),
                ),
                (
                    "client_availability_text",
                    models.CharField(
                        blank=True, default="Limited quarterly openings", max_length=100
                    ),
                ),
                (
                    "disclaimer_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Investment advisory services offered through Ethical Capital Investment Management LLC, a Registered Investment Adviser. Past performance does not guarantee future results. All investments involve risk. Please see our ADV Part 2 for important disclosures.</p><p>*Based on our analysis of S&P 500 constituents, approximately 57% failed one or more of our exclusion criteria. This percentage varies as companies and our criteria evolve.</p>",
                        help_text="Legal disclaimer and footnotes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Homepage",
                "verbose_name_plural": "Homepages",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="InstitutionalPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        blank=True,
                        default="Institutional Investment Solutions",
                        max_length=200,
                    ),
                ),
                (
                    "hero_subtitle",
                    models.CharField(
                        blank=True,
                        default="Scalable ethical investment solutions for institutions, endowments, and pension funds",
                        max_length=300,
                    ),
                ),
                (
                    "hero_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Custom investment strategies and compliance solutions designed for institutional scale and requirements.</p>",
                    ),
                ),
                (
                    "solutions_title",
                    models.CharField(
                        blank=True, default="Institutional Solutions", max_length=200
                    ),
                ),
                (
                    "solutions_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We work with institutions to implement ethical investment strategies at scale.</p>",
                    ),
                ),
                (
                    "capabilities_title",
                    models.CharField(
                        blank=True, default="Our Capabilities", max_length=200
                    ),
                ),
                ("capabilities_content", wagtail.fields.RichTextField(blank=True)),
                (
                    "scale_title",
                    models.CharField(
                        blank=True, default="Institutional Scale", max_length=200
                    ),
                ),
                (
                    "scale_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Our technology platform scales to handle institutional portfolio sizes and complexity.</p>",
                    ),
                ),
                (
                    "cta_title",
                    models.CharField(
                        blank=True, default="Discuss Your Needs", max_length=200
                    ),
                ),
                (
                    "cta_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Contact us to explore how we can support your institutional investment objectives.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Institutional Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="LegalPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("intro_text", wagtail.fields.RichTextField(blank=True)),
                ("content", wagtail.fields.RichTextField()),
                (
                    "effective_date",
                    models.DateField(
                        blank=True,
                        help_text="When this legal document takes effect",
                        null=True,
                    ),
                ),
                ("updated_at", models.DateField(auto_now=True)),
            ],
            options={
                "verbose_name": "Legal Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="MediaPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Media coverage, press releases, and company news.</p>",
                        help_text="Introduction text that appears at the top of the media page",
                    ),
                ),
                (
                    "press_kit_title",
                    models.CharField(
                        blank=True,
                        default="Press Kit",
                        help_text="Title for the press kit section",
                        max_length=200,
                    ),
                ),
                (
                    "press_kit_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Description and information about available press materials",
                    ),
                ),
            ],
            options={
                "verbose_name": "Media Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="OnboardingPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Take your first step toward ethical investing or jump in with both feet. Let's find the perfect mix of strategies for your values and needs.</p>",
                    ),
                ),
                (
                    "form_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>This comprehensive form helps us understand your investment goals, risk tolerance, and ethical priorities to create your personalized portfolio strategy.</p>",
                    ),
                ),
                (
                    "enable_form",
                    models.BooleanField(
                        default=True,
                        help_text="Enable the onboarding form on this page",
                    ),
                ),
                (
                    "thank_you_title",
                    models.CharField(blank=True, default="Thank You!", max_length=200),
                ),
                (
                    "thank_you_message",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We've received your information and will be in touch within 1-2 business days to discuss your personalized investment strategy.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Onboarding Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="PricingPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Transparent pricing designed to scale with your practice.</p>",
                    ),
                ),
                ("pricing_description", wagtail.fields.RichTextField(blank=True)),
                (
                    "enterprise_title",
                    models.CharField(
                        blank=True, default="Enterprise Solutions", max_length=200
                    ),
                ),
                ("enterprise_description", wagtail.fields.RichTextField(blank=True)),
                (
                    "contact_cta",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Ready to discuss pricing for your practice? <a href='/contact/'>Contact our team</a> for a personalized quote.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pricing Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="PRIDDQPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        default="PRI Due Diligence Questionnaire",
                        help_text="Main headline",
                        max_length=200,
                    ),
                ),
                (
                    "hero_subtitle",
                    models.TextField(
                        default="Comprehensive responses to Principles for Responsible Investment due diligence questions.",
                        help_text="Subtitle text below the main headline",
                        max_length=500,
                    ),
                ),
                (
                    "hero_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>As a signatory-aligned investment manager, we provide detailed responses to standard PRI due diligence questions covering our ESG integration, stewardship practices, and responsible investment approach.</p>",
                        help_text="Hero section description",
                    ),
                ),
                (
                    "updated_at",
                    models.CharField(
                        default="January 2025",
                        help_text="Month and year when this document was last updated",
                        max_length=50,
                    ),
                ),
                (
                    "executive_summary",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Ethical Capital Investment Management is a registered investment adviser specializing in values-based equity investing. We integrate comprehensive ESG criteria throughout our investment process, excluding 57% of the S&P 500 through our proprietary screening methodology.</p>",
                        help_text="Executive summary of ESG approach",
                    ),
                ),
                (
                    "strategy_governance_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Strategy and governance practices content",
                    ),
                ),
                (
                    "esg_integration_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="ESG integration methodology and practices",
                    ),
                ),
                (
                    "stewardship_content",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Stewardship and engagement practices"
                    ),
                ),
                (
                    "transparency_content",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Reporting and transparency practices"
                    ),
                ),
                (
                    "climate_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Climate change and environmental practices",
                    ),
                ),
                (
                    "reporting_verification_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Reporting and verification practices content",
                    ),
                ),
                (
                    "additional_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Additional information and internal ESG management",
                    ),
                ),
                (
                    "screening_policy_url",
                    models.URLField(
                        default="https://github.com/ethicalcapital/sage/blob/main/screening_policy.md",
                        help_text="URL to open-source screening policy",
                    ),
                ),
                (
                    "form_adv_url",
                    models.URLField(
                        blank=True,
                        default="https://reports.adviserinfo.sec.gov/reports/ADV/316032/PDF/316032.pdf",
                        help_text="URL to Form ADV disclosure",
                    ),
                ),
            ],
            options={
                "verbose_name": "PRI DDQ Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ProcessPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Learn about our mission to democratize investment intelligence and compliance technology.</p>",
                    ),
                ),
                (
                    "process_overview",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Our investment process combines ethical screening with disciplined portfolio construction.</p>",
                    ),
                ),
                (
                    "step1_title",
                    models.CharField(
                        blank=True, default="A Living Framework", max_length=200
                    ),
                ),
                (
                    "step1_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We built the best ethical framework we couldâ€”then kept building. Our criteria evolve in response to whatever harmful patterns emerge in the world, adapting as we learn more about both harm and healing. We seek companies making unmistakable positive contributions to all inhabitantsâ€”human and non-human animals alike.</p>",
                    ),
                ),
                (
                    "step2_title",
                    models.CharField(
                        blank=True, default="Quality & Value Analysis", max_length=200
                    ),
                ),
                (
                    "step2_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>From the remaining ethical universe, we identify companies with strong fundamentals, competitive advantages, and reasonable valuations. We look for businesses we understand, with management teams we trust, trading at prices that make sense.</p>",
                    ),
                ),
                (
                    "step3_title",
                    models.CharField(
                        blank=True, default="Portfolio Construction", max_length=200
                    ),
                ),
                (
                    "step3_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We build diversified portfolios that balance risk, return, and ethical impact. Our three core strategies can be mixed and matched to create the perfect allocation for your values, risk tolerance, and income needs.</p>",
                    ),
                ),
                (
                    "step4_title",
                    models.CharField(
                        blank=True, default="Ongoing Monitoring", max_length=200
                    ),
                ),
                (
                    "step4_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>We continuously monitor holdings for changes in business practices, financial health, and market conditions. If a company no longer meets our criteria, we remove it from the portfolio.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Process Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="ResearchPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>In-depth research and analysis on ethical investing, portfolio construction, and sustainable finance strategies.</p>",
                    ),
                ),
                (
                    "description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>I provide actionable research insights to help you make informed investment decisions that align with your values and financial goals.</p>",
                    ),
                ),
                (
                    "featured_title",
                    models.CharField(
                        blank=True, default="Featured Research", max_length=200
                    ),
                ),
                (
                    "featured_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Essential research findings and market insights for ethical investing.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Research Page",
            },
            bases=(
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="SolutionsPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        default="Investment Solutions",
                        help_text="Main headline",
                        max_length=200,
                    ),
                ),
                (
                    "hero_subtitle",
                    models.TextField(
                        default="Ethical investment strategies tailored for individuals, institutions, and investment advisers.",
                        help_text="Subtitle text below the main headline",
                        max_length=500,
                    ),
                ),
                (
                    "hero_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Whether you're an individual investor, institutional client, or investment adviser, we provide sophisticated ethical investment solutions that align your portfolio with your principles.</p>",
                        help_text="Hero section description",
                    ),
                ),
                (
                    "individuals_title",
                    models.CharField(
                        blank=True, default="For Individuals", max_length=200
                    ),
                ),
                (
                    "individuals_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Take your first step toward ethical investing or jump in with both feet. Our personalized approach helps you align your investments with your values while achieving your financial goals.</p>",
                    ),
                ),
                (
                    "institutions_title",
                    models.CharField(
                        blank=True, default="For Institutions", max_length=200
                    ),
                ),
                (
                    "institutions_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Scalable ethical investment solutions for endowments, pension funds, and institutional clients who require sophisticated strategies at institutional scale.</p>",
                    ),
                ),
                (
                    "advisors_title",
                    models.CharField(
                        blank=True, default="For Investment Advisers", max_length=200
                    ),
                ),
                (
                    "advisors_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Partner with us to serve clients who want their portfolios to align with their principles. We provide the specialized research, proven strategies, and operational support you need.</p>",
                    ),
                ),
                (
                    "cta_title",
                    models.CharField(
                        blank=True, default="Ready to Get Started?", max_length=200
                    ),
                ),
                (
                    "cta_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Let's find the perfect solution for your needs. Contact us to discuss how we can help you achieve your investment goals while staying true to your values.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Solutions Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="StrategyListPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "intro_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Our investment strategies are designed to align your portfolio with your values while delivering strong financial performance.</p>",
                    ),
                ),
                (
                    "description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Each strategy follows our rigorous ethical screening process and disciplined investment approach to help you achieve your financial goals.</p>",
                    ),
                ),
                (
                    "comparison_title",
                    models.CharField(
                        blank=True, default="Strategy Comparison", max_length=200
                    ),
                ),
                (
                    "comparison_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Compare our investment strategies to find the approach that best matches your goals and risk tolerance.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Strategy List Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="StrategyPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "strategy_subtitle",
                    models.CharField(
                        blank=True,
                        help_text="Brief description shown in header",
                        max_length=300,
                    ),
                ),
                (
                    "strategy_description",
                    wagtail.fields.RichTextField(
                        blank=True, help_text="Main strategy description"
                    ),
                ),
                (
                    "strategy_label",
                    models.CharField(
                        blank=True,
                        help_text="Label shown on strategy card (e.g., 'Our Flagship')",
                        max_length=100,
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        blank=True, default="Full market exposure", max_length=100
                    ),
                ),
                (
                    "ethical_implementation",
                    models.CharField(
                        blank=True, default="100% Full Criteria", max_length=100
                    ),
                ),
                (
                    "holdings_count",
                    models.CharField(blank=True, default="15-25", max_length=50),
                ),
                (
                    "best_for",
                    models.CharField(
                        blank=True, default="Long-term growth", max_length=100
                    ),
                ),
                (
                    "cash_allocation",
                    models.CharField(blank=True, default="0.93%", max_length=20),
                ),
                (
                    "benchmark_name",
                    models.CharField(
                        blank=True,
                        default="ACWI",
                        help_text="e.g., ACWI, AGG/PFF, S&P 500",
                        max_length=50,
                    ),
                ),
                (
                    "ytd_return",
                    models.CharField(blank=True, default="8.2%", max_length=20),
                ),
                (
                    "ytd_benchmark",
                    models.CharField(blank=True, default="5.1%", max_length=20),
                ),
                (
                    "ytd_difference",
                    models.CharField(blank=True, default="+3.1%", max_length=20),
                ),
                (
                    "one_year_return",
                    models.CharField(blank=True, default="15.7%", max_length=20),
                ),
                (
                    "one_year_benchmark",
                    models.CharField(blank=True, default="12.3%", max_length=20),
                ),
                (
                    "one_year_difference",
                    models.CharField(blank=True, default="+3.4%", max_length=20),
                ),
                (
                    "three_year_return",
                    models.CharField(blank=True, default="9.8%", max_length=20),
                ),
                (
                    "three_year_benchmark",
                    models.CharField(blank=True, default="7.2%", max_length=20),
                ),
                (
                    "three_year_difference",
                    models.CharField(blank=True, default="+2.6%", max_length=20),
                ),
                (
                    "since_inception_return",
                    models.CharField(blank=True, default="12.1%", max_length=20),
                ),
                (
                    "since_inception_benchmark",
                    models.CharField(blank=True, default="9.5%", max_length=20),
                ),
                (
                    "since_inception_difference",
                    models.CharField(blank=True, default="+2.6%", max_length=20),
                ),
                (
                    "inception_date",
                    models.DateField(
                        blank=True, help_text="Strategy inception date", null=True
                    ),
                ),
                (
                    "portfolio_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Portfolio composition and holdings information",
                    ),
                ),
                (
                    "overweights_note",
                    models.CharField(
                        blank=True,
                        default="Higher conviction in these sectors",
                        max_length=300,
                    ),
                ),
                (
                    "exclusions_note",
                    models.CharField(
                        blank=True,
                        default="22% of benchmark index excluded",
                        max_length=300,
                    ),
                ),
                (
                    "healthcare_exclusion_note",
                    models.TextField(
                        blank=True,
                        default="* Healthcare exclusions are selective, focused on companies that directly support abortion procedures or controversial research practices",
                    ),
                ),
                (
                    "commentary_title",
                    models.CharField(
                        blank=True, default="Strategy Commentary", max_length=200
                    ),
                ),
                (
                    "commentary_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Current market commentary and strategy insights",
                    ),
                ),
                (
                    "process_title",
                    models.CharField(blank=True, default="Our Process", max_length=200),
                ),
                (
                    "process_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Detailed process explanation for this strategy",
                    ),
                ),
                (
                    "documents_title",
                    models.CharField(
                        blank=True, default="Strategy Documents", max_length=200
                    ),
                ),
                (
                    "documents_content",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Links to relevant documents and disclosures",
                    ),
                ),
                (
                    "performance_disclaimer",
                    wagtail.fields.RichTextField(
                        blank=True,
                        default="<p>Past performance is not indicative of future results. Investment returns and principal value will fluctuate.</p>",
                    ),
                ),
            ],
            options={
                "verbose_name": "Strategy Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="SupportTicket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("company", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "ticket_type",
                    models.CharField(
                        choices=[
                            ("contact", "Contact Form"),
                            ("newsletter", "Newsletter Signup"),
                            ("onboarding", "Onboarding Request"),
                            ("garden_interest", "Garden Platform Interest"),
                        ],
                        default="contact",
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="new",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Internal notes about this ticket"
                    ),
                ),
            ],
            options={
                "verbose_name": "Support Ticket",
                "verbose_name_plural": "Support Tickets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "excerpt",
                    models.CharField(
                        blank=True,
                        help_text="Brief description of the post for listings and SEO",
                        max_length=300,
                    ),
                ),
                (
                    "content",
                    wagtail.fields.StreamField(
                        [
                            (
                                "rich_text",
                                wagtail.blocks.RichTextBlock(
                                    features=[
                                        "h2",
                                        "h3",
                                        "h4",
                                        "bold",
                                        "italic",
                                        "link",
                                        "ol",
                                        "ul",
                                        "document-link",
                                    ],
                                    help_text="Rich text content with basic formatting",
                                ),
                            ),
                            (
                                "key_statistic",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "value",
                                            wagtail.blocks.CharBlock(
                                                max_length=50,
                                                help_text="The statistic value",
                                            ),
                                        ),
                                        (
                                            "label",
                                            wagtail.blocks.CharBlock(
                                                max_length=100,
                                                help_text="Statistic label",
                                            ),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.TextBlock(
                                                required=False,
                                                help_text="Optional description",
                                            ),
                                        ),
                                        (
                                            "ai_confidence",
                                            wagtail.blocks.DecimalBlock(
                                                default=0.0,
                                                max_digits=3,
                                                decimal_places=2,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "ai_context",
                                            wagtail.blocks.TextBlock(required=False),
                                        ),
                                        (
                                            "significance_level",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("high", "High Significance"),
                                                    ("medium", "Medium Significance"),
                                                    ("low", "Low Significance"),
                                                ],
                                                default="medium",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "statistic_category",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("financial", "Financial"),
                                                    ("environmental", "Environmental"),
                                                    ("social", "Social Impact"),
                                                    ("governance", "Governance"),
                                                ],
                                                default="financial",
                                                required=False,
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            ("table", wagtail.contrib.table_block.blocks.TableBlock()),
                            ("image", wagtail.images.blocks.ImageChooserBlock()),
                            (
                                "callout",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("text", wagtail.blocks.RichTextBlock()),
                                        (
                                            "type",
                                            wagtail.blocks.ChoiceBlock(
                                                choices=[
                                                    ("info", "Info"),
                                                    ("warning", "Warning"),
                                                    ("success", "Success"),
                                                ],
                                                default="info",
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "quote",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("text", wagtail.blocks.TextBlock()),
                                        (
                                            "attribution",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ]
                                ),
                            ),
                        ],
                        blank=True,
                    ),
                ),
                (
                    "body",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Legacy rich text field (use Content field above for new posts)",
                    ),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True, default="Sloane Ortel", max_length=100
                    ),
                ),
                (
                    "publish_date",
                    models.DateField(
                        blank=True, help_text="Leave blank for today's date", null=True
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False, help_text="Feature this post on the homepage"
                    ),
                ),
                (
                    "reading_time",
                    models.IntegerField(
                        default=5, help_text="Estimated reading time in minutes"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Automatically updated when the content is modified",
                    ),
                ),
                (
                    "featured_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Featured image for social sharing and blog listings",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "BlogPost",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="BlogTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="public_site.blogpost",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(app_label)s_%(class)s_items",
                        to="taggit.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="blogpost",
            name="tags",
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="public_site.BlogTag",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.CreateModel(
            name="FAQItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("question", models.CharField(max_length=300)),
                ("answer", wagtail.fields.RichTextField()),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="faq_items",
                        to="public_site.faqpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GuidePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "hero_title",
                    models.CharField(
                        default="Investment Guide",
                        help_text="Main headline",
                        max_length=200,
                    ),
                ),
                (
                    "hero_subtitle",
                    models.TextField(
                        default="Comprehensive guide to ethical investing principles and strategies.",
                        help_text="Subtitle text below the main headline",
                        max_length=500,
                    ),
                ),
                (
                    "guide_description",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="Description of what's included in the guide",
                    ),
                ),
                (
                    "external_guide_url",
                    models.URLField(
                        blank=True,
                        help_text="Alternative: External URL for guide (if not using document upload)",
                    ),
                ),
                (
                    "guide_document",
                    models.ForeignKey(
                        blank=True,
                        help_text="PDF or other document to download",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtaildocs.document",
                    ),
                ),
            ],
            options={
                "verbose_name": "Guide Page",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="MediaItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("title", models.CharField(max_length=300)),
                ("description", wagtail.fields.RichTextField(blank=True)),
                (
                    "publication",
                    models.CharField(
                        blank=True, help_text="Publication name", max_length=200
                    ),
                ),
                ("publication_date", models.DateField(blank=True, null=True)),
                (
                    "external_url",
                    models.URLField(
                        blank=True, help_text="Link to external article/coverage"
                    ),
                ),
                (
                    "featured",
                    models.BooleanField(
                        default=False, help_text="Feature this media item at the top"
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media_items",
                        to="public_site.mediapage",
                    ),
                ),
            ],
            options={
                "ordering": ["-featured", "-publication_date"],
            },
        ),
        migrations.CreateModel(
            name="SiteConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        default="Ethical Capital",
                        help_text="Company brand name displayed in navigation and footer",
                        max_length=100,
                    ),
                ),
                (
                    "company_tagline",
                    models.CharField(
                        default="Institutional-Grade Ethical Investing",
                        help_text="Main tagline for SEO and social media",
                        max_length=200,
                    ),
                ),
                (
                    "company_description",
                    models.TextField(
                        default="SEC-registered investment advisor specializing in ethical portfolio management and concentrated sustainable investing strategies.",
                        help_text="Company description for meta tags and schema markup",
                    ),
                ),
                (
                    "primary_email",
                    models.EmailField(
                        default="hello@ethicic.com",
                        help_text="Primary contact email address",
                        max_length=254,
                    ),
                ),
                (
                    "support_email",
                    models.EmailField(
                        default="hello@ethicic.com",
                        help_text="Support and accessibility contact email",
                        max_length=254,
                    ),
                ),
                (
                    "cio_email",
                    models.EmailField(
                        default="sloane@ethicic.com",
                        help_text="Chief Investment Officer email",
                        max_length=254,
                    ),
                ),
                (
                    "primary_phone",
                    models.CharField(
                        default="+1 347 625 9000",
                        help_text="Primary phone number",
                        max_length=20,
                    ),
                ),
                (
                    "accessibility_phone",
                    models.CharField(
                        default="+1 (801) 123-4567",
                        help_text="Accessibility support phone number",
                        max_length=20,
                    ),
                ),
                (
                    "street_address",
                    models.CharField(
                        default="90 N 400 E", help_text="Street address", max_length=200
                    ),
                ),
                (
                    "city",
                    models.CharField(default="Provo", help_text="City", max_length=100),
                ),
                (
                    "state",
                    models.CharField(
                        default="UT", help_text="State or region", max_length=50
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        default="84606", help_text="Postal/ZIP code", max_length=20
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="United States", help_text="Country", max_length=100
                    ),
                ),
                (
                    "twitter_handle",
                    models.CharField(
                        default="@ethicalcapital",
                        help_text="Twitter handle (include @)",
                        max_length=50,
                    ),
                ),
                (
                    "linkedin_url",
                    models.URLField(blank=True, help_text="LinkedIn company page URL"),
                ),
                (
                    "default_meta_description",
                    models.TextField(
                        default="Ethical Capital - Institutional-Grade Ethical Investing",
                        help_text="Default meta description for pages without custom descriptions",
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        default="investment intelligence, compliance, portfolio management, financial advisory",
                        help_text="Default meta keywords",
                        max_length=300,
                    ),
                ),
                (
                    "founding_year",
                    models.CharField(
                        default="2021", help_text="Company founding year", max_length=4
                    ),
                ),
                (
                    "copyright_text",
                    models.CharField(
                        default="Ethical Capital Investment Collaborative. All rights reserved.",
                        help_text="Footer copyright text",
                        max_length=200,
                    ),
                ),
                (
                    "business_hours",
                    models.CharField(
                        default="Monday - Friday, 9:00 AM - 5:00 PM MT",
                        help_text="Business hours display text",
                        max_length=100,
                    ),
                ),
                (
                    "minimum_investment",
                    models.CharField(
                        default="$25,000",
                        help_text="Minimum investment amount",
                        max_length=20,
                    ),
                ),
                (
                    "contact_success_message",
                    models.TextField(
                        default="Thank you for your message! We will get back to you within 24 hours.",
                        help_text="Success message for contact form submissions",
                    ),
                ),
                (
                    "contact_error_message",
                    models.TextField(
                        default="Please correct the errors below and try again.",
                        help_text="Error message for contact form submissions",
                    ),
                ),
                (
                    "newsletter_success_message",
                    models.TextField(
                        default="Thank you for subscribing to our newsletter!",
                        help_text="Success message for newsletter subscriptions",
                    ),
                ),
                (
                    "newsletter_title",
                    models.CharField(
                        default="Stay Updated",
                        help_text="Newsletter signup widget title",
                        max_length=100,
                    ),
                ),
                (
                    "newsletter_description",
                    models.TextField(
                        default="Get our latest insights on ethical investing delivered to your inbox.",
                        help_text="Newsletter signup description",
                    ),
                ),
                (
                    "newsletter_privacy_text",
                    models.CharField(
                        default="We respect your privacy. Unsubscribe at any time.",
                        help_text="Newsletter privacy notice",
                        max_length=200,
                    ),
                ),
                (
                    "investment_goal_growth_title",
                    models.CharField(
                        default="Long-term Growth",
                        help_text="Growth investment goal title",
                        max_length=50,
                    ),
                ),
                (
                    "investment_goal_growth_desc",
                    models.TextField(
                        default="Building wealth over time, comfortable with market volatility",
                        help_text="Growth investment goal description",
                    ),
                ),
                (
                    "investment_goal_income_title",
                    models.CharField(
                        default="Current Income",
                        help_text="Income investment goal title",
                        max_length=50,
                    ),
                ),
                (
                    "investment_goal_income_desc",
                    models.TextField(
                        default="Regular income from investments, with some growth potential",
                        help_text="Income investment goal description",
                    ),
                ),
                (
                    "investment_goal_balanced_title",
                    models.CharField(
                        default="Balanced Approach",
                        help_text="Balanced investment goal title",
                        max_length=50,
                    ),
                ),
                (
                    "investment_goal_balanced_desc",
                    models.TextField(
                        default="Mix of growth and income, moderate risk tolerance",
                        help_text="Balanced investment goal description",
                    ),
                ),
                (
                    "investment_goal_preservation_title",
                    models.CharField(
                        default="Capital Preservation",
                        help_text="Preservation investment goal title",
                        max_length=50,
                    ),
                ),
                (
                    "investment_goal_preservation_desc",
                    models.TextField(
                        default="Protecting principal, minimal risk, steady returns",
                        help_text="Preservation investment goal description",
                    ),
                ),
                (
                    "site",
                    models.OneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="wagtailcore.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Site Configuration",
            },
        ),
        migrations.CreateModel(
            name="NavigationMenuItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="Text displayed in navigation", max_length=50
                    ),
                ),
                (
                    "url",
                    models.CharField(
                        help_text="URL or path (e.g., /about/, /process/)",
                        max_length=200,
                    ),
                ),
                (
                    "external",
                    models.BooleanField(
                        default=False, help_text="Open in new tab/window"
                    ),
                ),
                (
                    "show_in_nav",
                    models.BooleanField(
                        default=True,
                        help_text="Display this item in the main navigation",
                    ),
                ),
                (
                    "show_in_footer",
                    models.BooleanField(
                        default=True, help_text="Display this item in the footer"
                    ),
                ),
                (
                    "parent",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nav_items",
                        to="public_site.siteconfiguration",
                    ),
                ),
            ],
            options={
                "verbose_name": "Navigation Menu Item",
            },
        ),
        migrations.CreateModel(
            name="StrategyHolding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("company_name", models.CharField(max_length=200)),
                ("ticker_symbol", models.CharField(max_length=20)),
                (
                    "weight_percent",
                    models.CharField(help_text="e.g., ~8.4%", max_length=20),
                ),
                (
                    "vertical",
                    models.CharField(
                        help_text="e.g., Lending, Real Estate, Innovation",
                        max_length=100,
                    ),
                ),
                ("investment_thesis", models.TextField()),
                (
                    "key_metrics",
                    models.TextField(
                        help_text="e.g., 40%+ annual revenue growth, AI market leader"
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="holdings",
                        to="public_site.strategypage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StrategyGeographicAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "region",
                    models.CharField(
                        help_text="e.g., United States, International", max_length=100
                    ),
                ),
                (
                    "allocation_percent",
                    models.CharField(help_text="e.g., 78.0%", max_length=20),
                ),
                (
                    "benchmark_percent",
                    models.CharField(help_text="e.g., 62.0%", max_length=20),
                ),
                (
                    "difference_percent",
                    models.CharField(help_text="e.g., +16.0%", max_length=20),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="geographic_allocations",
                        to="public_site.strategypage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StrategyDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("performance", "Performance Reports"),
                            ("strategy", "Strategy Information"),
                            ("regulatory", "Regulatory Disclosures"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.CharField(max_length=300)),
                (
                    "icon",
                    models.CharField(
                        default="ðŸ“„", help_text="Emoji icon for document", max_length=10
                    ),
                ),
                (
                    "document_url",
                    models.URLField(
                        blank=True, help_text="Link to document if available"
                    ),
                ),
                (
                    "requires_request",
                    models.BooleanField(
                        default=True, help_text="Document requires request"
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="public_site.strategypage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StrategyRiskMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "standard_deviation",
                    models.CharField(
                        blank=True, help_text="e.g., 16.2%", max_length=20
                    ),
                ),
                (
                    "sharpe_ratio",
                    models.CharField(blank=True, help_text="e.g., 0.78", max_length=20),
                ),
                (
                    "max_drawdown",
                    models.CharField(
                        blank=True, help_text="e.g., -22.1%", max_length=20
                    ),
                ),
                (
                    "beta",
                    models.CharField(blank=True, help_text="e.g., 0.94", max_length=20),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_metrics",
                        to="public_site.strategypage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StrategySectorPosition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "position_type",
                    models.CharField(
                        choices=[
                            ("overweight", "Overweight"),
                            ("exclusion", "Exclusion"),
                        ],
                        max_length=20,
                    ),
                ),
                ("sector_name", models.CharField(max_length=100)),
                (
                    "note",
                    models.TextField(
                        blank=True, help_text="Additional notes about this sector"
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sector_positions",
                        to="public_site.strategypage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StrategyVerticalAllocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ("vertical_name", models.CharField(max_length=100)),
                ("weight_percent", models.CharField(max_length=20)),
                ("dividend_yield", models.CharField(max_length=20)),
                ("pe_ratio", models.CharField(max_length=20)),
                ("revenue_cagr", models.CharField(max_length=20)),
                ("fcf_market_cap", models.CharField(max_length=20)),
                (
                    "is_total_row",
                    models.BooleanField(
                        default=False, help_text="Check for portfolio total row"
                    ),
                ),
                (
                    "is_benchmark_row",
                    models.BooleanField(
                        default=False, help_text="Check for benchmark comparison row"
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vertical_allocations",
                        to="public_site.strategypage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
