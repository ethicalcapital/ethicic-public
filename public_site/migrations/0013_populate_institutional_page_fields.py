# Generated by Django 5.1.5 on 2025-07-07 00:19

from django.db import migrations
import json


def populate_institutional_page_fields(apps, schema_editor):
    """Populate InstitutionalPage with hardcoded content from template."""
    InstitutionalPage = apps.get_model("public_site", "InstitutionalPage")

    # Get all InstitutionalPage instances
    for page in InstitutionalPage.objects.all():
        # Services offered
        if not page.services:
            page.services = json.dumps(
                [
                    {
                        "type": "service",
                        "value": {
                            "title": "PROVEN STRATEGIES",
                            "description": '<p>Three distinct <a href="/strategies/" class="text-link">investment strategies</a> with proprietary <a href="/process/" class="text-link">screening methodologies</a> that exclude 57% of the S&P 500 based on rigorous ethical criteria.</p>',
                        },
                    },
                    {
                        "type": "service",
                        "value": {
                            "title": "LIQUID IMPLEMENTATION",
                            "description": "<p>Strategies implemented using liquid securities with institutional-grade diversification, risk management, and performance attribution capabilities.</p>",
                        },
                    },
                    {
                        "type": "service",
                        "value": {
                            "title": "DIRECT CIO ACCESS",
                            "description": "<p>Direct access to our Chief Investment Officer for strategy discussions, implementation support, and ongoing institutional partnership.</p>",
                        },
                    },
                    {
                        "type": "service",
                        "value": {
                            "title": "COMMUNITY ENGAGEMENT",
                            "description": "<p>We're committed to meeting with communities, stakeholder groups, and institutional committees to discuss ethical investing approaches and implementation strategies.</p>",
                        },
                    },
                ]
            )

        # Benefits
        if not page.benefits:
            page.benefits = json.dumps(
                [
                    {
                        "type": "benefit",
                        "value": {
                            "title": "Transparent Methodology",
                            "description": '<p>Our <a href="https://github.com/ethicalcapital/sage/blob/main/screening_policy.md" target="_blank" rel="noopener" class="text-link">screening criteria is open source</a>, providing complete transparency and documentation for institutional oversight committees.</p>',
                        },
                    },
                    {
                        "type": "benefit",
                        "value": {
                            "title": "Investment Capacity",
                            "description": "<p>We have excess capacity of $250+ million, implementing strategies using liquid securities that provide institutional-scale access and flexibility.</p>",
                        },
                    },
                    {
                        "type": "benefit",
                        "value": {
                            "title": "Direct CIO Access",
                            "description": "<p>Institutions work directly with our Chief Investment Officer for strategy discussions, implementation decisions, and ongoing partnership.</p>",
                        },
                    },
                    {
                        "type": "benefit",
                        "value": {
                            "title": "Community Engagement",
                            "description": "<p>We're committed to meeting with communities, stakeholder groups, and institutional committees to ensure alignment with institutional values and missions.</p>",
                        },
                    },
                    {
                        "type": "benefit",
                        "value": {
                            "title": "Fiduciary Standards",
                            "description": "<p>Our systematic approach meets institutional fiduciary requirements with documented processes, audit trails, and performance attribution.</p>",
                        },
                    },
                    {
                        "type": "benefit",
                        "value": {
                            "title": "Proven Track Record",
                            "description": "<p>Since 2021, we've helped institutions implement ethical investing strategies that meet both performance and values-alignment objectives.</p>",
                        },
                    },
                ]
            )

        # Process steps
        if not page.process_steps:
            page.process_steps = json.dumps(
                [
                    {
                        "type": "process_step",
                        "value": {
                            "step_number": 1,
                            "title": "INSTITUTIONAL ASSESSMENT",
                            "description": "Comprehensive evaluation of institutional requirements, existing infrastructure, stakeholder expectations, and fiduciary constraints.",
                        },
                    },
                    {
                        "type": "process_step",
                        "value": {
                            "step_number": 2,
                            "title": "CUSTOM STRATEGY DESIGN",
                            "description": "Development of tailored ethical investing approaches that accommodate institutional scale, risk parameters, and compliance requirements.",
                        },
                    },
                    {
                        "type": "process_step",
                        "value": {
                            "step_number": 3,
                            "title": "INFRASTRUCTURE INTEGRATION",
                            "description": "Seamless integration with existing institutional systems, including custodians, reporting platforms, and oversight frameworks.",
                        },
                    },
                    {
                        "type": "process_step",
                        "value": {
                            "step_number": 4,
                            "title": "ONGOING INSTITUTIONAL SUPPORT",
                            "description": "Continuous research updates, performance monitoring, and stakeholder reporting to ensure ongoing alignment and oversight.",
                        },
                    },
                ]
            )

        # Scale metrics
        if not page.scale_metrics:
            page.scale_metrics = json.dumps(
                [
                    {
                        "type": "metric",
                        "value": {
                            "value": "$250M+",
                            "label": "INVESTMENT CAPACITY",
                            "description": "Excess capacity available for institutional partnerships",
                        },
                    },
                    {
                        "type": "metric",
                        "value": {
                            "value": "57%",
                            "label": "S&P 500 EXCLUDED",
                            "description": "Comprehensive ethical screening applied systematically",
                        },
                    },
                    {
                        "type": "metric",
                        "value": {
                            "value": "DIRECT",
                            "label": "CIO ACCESS",
                            "description": "Work directly with our Chief Investment Officer",
                        },
                    },
                    {
                        "type": "metric",
                        "value": {
                            "value": "LIQUID",
                            "label": "SECURITIES",
                            "description": "Implementation using liquid securities for flexibility",
                        },
                    },
                ]
            )

        # Resource categories
        if not page.resource_categories:
            page.resource_categories = json.dumps(
                [
                    {
                        "type": "resource_category",
                        "value": {
                            "title": "ESG & Responsible Investment",
                            "resources": [
                                {
                                    "icon": "ü§ù",
                                    "title": "PRI Due Diligence Questionnaire",
                                    "description": "Comprehensive responses to Principles for Responsible Investment standard questions",
                                    "url": "/pri-ddq/",
                                },
                                {
                                    "icon": "üîç",
                                    "title": "Open-Source Screening Policy",
                                    "description": "Complete ethical screening methodology with version control",
                                    "url": "https://github.com/ethicalcapital/sage/blob/main/screening_policy.md",
                                },
                                {
                                    "icon": "‚öôÔ∏è",
                                    "title": "Investment Process Documentation",
                                    "description": "Detailed four-step investment methodology and governance",
                                    "url": "/process/",
                                },
                            ],
                        },
                    },
                    {
                        "type": "resource_category",
                        "value": {
                            "title": "Regulatory & Compliance",
                            "resources": [
                                {
                                    "icon": "üìë",
                                    "title": "Form ADV",
                                    "description": "SEC-required investment adviser disclosure and regulatory filing",
                                    "url": "/disclosures/form-adv/",
                                },
                                {
                                    "icon": "‚ö†Ô∏è",
                                    "title": "Risk Disclosures",
                                    "description": "Important risk disclosures and legal notices",
                                    "url": "/disclosures/",
                                },
                                {
                                    "icon": "üìä",
                                    "title": "Strategy Performance Data",
                                    "description": "Detailed performance reporting and strategy documentation",
                                    "url": "/strategies/",
                                },
                            ],
                        },
                    },
                ]
            )

        # Update default CTA values if they're still the old defaults
        if page.cta_title == "Discuss Your Needs":
            page.cta_title = (
                "Let's discuss how we can support your institutional objectives"
            )

        if (
            page.cta_description
            == "<p>Contact us to explore how we can support your institutional investment objectives.</p>"
        ):
            page.cta_description = "<p>Join leading institutions who trust our systematic approach to help them implement ethical investing strategies that meet both fiduciary standards and stakeholder expectations.</p>"

        page.save()


def reverse_population(apps, schema_editor):
    """Reverse migration - no need to clear fields."""
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("public_site", "0012_add_institutional_page_comprehensive_fields"),
    ]

    operations = [
        migrations.RunPython(populate_institutional_page_fields, reverse_population),
    ]
