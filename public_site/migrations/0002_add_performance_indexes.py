# Generated by Django 5.1.5 on 2025-07-05 22:48

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("public_site", "0001_initial_squashed"),
    ]

    operations = [
        # Date field indexes for filtering and ordering
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_blogpost_updated_at ON public_site_blogpost(updated_at);",
            reverse_sql="DROP INDEX IF EXISTS idx_blogpost_updated_at;",
            state_operations=[],
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_blogpost_publish_date ON public_site_blogpost(publish_date);",
            reverse_sql="DROP INDEX IF EXISTS idx_blogpost_publish_date;",
            state_operations=[],
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_supportticket_created_at ON public_site_supportticket(created_at);",
            reverse_sql="DROP INDEX IF EXISTS idx_supportticket_created_at;",
            state_operations=[],
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_supportticket_updated_at ON public_site_supportticket(updated_at);",
            reverse_sql="DROP INDEX IF EXISTS idx_supportticket_updated_at;",
            state_operations=[],
        ),
        # Status/filter field indexes
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_supportticket_status ON public_site_supportticket(status);",
            reverse_sql="DROP INDEX IF EXISTS idx_supportticket_status;",
            state_operations=[],
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_supportticket_priority ON public_site_supportticket(priority);",
            reverse_sql="DROP INDEX IF EXISTS idx_supportticket_priority;",
            state_operations=[],
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_supportticket_type ON public_site_supportticket(ticket_type);",
            reverse_sql="DROP INDEX IF EXISTS idx_supportticket_type;",
            state_operations=[],
        ),
        # Composite indexes for common query patterns
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_supportticket_status_created ON public_site_supportticket(status, created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_supportticket_status_created;",
            state_operations=[],
        ),
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_supportticket_priority_created ON public_site_supportticket(priority, created_at DESC);",
            reverse_sql="DROP INDEX IF EXISTS idx_supportticket_priority_created;",
            state_operations=[],
        ),
        # Wagtail page slug indexes - these are on the wagtailcore_page table
        migrations.RunSQL(
            """
            CREATE INDEX IF NOT EXISTS idx_wagtail_page_slug
            ON wagtailcore_page(slug)
            WHERE slug IS NOT NULL;
            """,
            reverse_sql="DROP INDEX IF EXISTS idx_wagtail_page_slug;",
            state_operations=[],
        ),
        # Wagtail page performance indexes
        migrations.RunSQL(
            """
            CREATE INDEX IF NOT EXISTS idx_wagtail_page_live_slug
            ON wagtailcore_page(live, slug)
            WHERE live = true AND slug IS NOT NULL;
            """,
            reverse_sql="DROP INDEX IF EXISTS idx_wagtail_page_live_slug;",
            state_operations=[],
        ),
        # Blog-specific performance index
        migrations.RunSQL(
            """
            CREATE INDEX IF NOT EXISTS idx_blogpost_publish_updated
            ON public_site_blogpost(publish_date DESC, updated_at DESC)
            WHERE publish_date IS NOT NULL;
            """,
            reverse_sql="DROP INDEX IF EXISTS idx_blogpost_publish_updated;",
            state_operations=[],
        ),
        # FAQ priority index
        migrations.RunSQL(
            "CREATE INDEX IF NOT EXISTS idx_faqarticle_priority ON public_site_faqarticle(priority);",
            reverse_sql="DROP INDEX IF EXISTS idx_faqarticle_priority;",
            state_operations=[],
        ),
    ]
