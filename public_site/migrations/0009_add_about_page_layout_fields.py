# Generated by Django 4.2.16 on 2025-07-04 02:42

from django.db import migrations, models
import wagtail.blocks
import wagtail.contrib.table_block.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):
    dependencies = [
        ("public_site", "0008_alter_strategydocument_category_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="aboutpage",
            name="client_focus_content",
            field=wagtail.fields.RichTextField(
                blank=True,
                default="<p>Spending time getting to know our clients, which I find profoundly grounding. Building portfolios that reflect their values while delivering strong financial outcomes.</p>",
                help_text="Client focus description for What I Do Now panel",
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="current_role_content",
            field=wagtail.fields.RichTextField(
                blank=True,
                default="<p>Chief Investment Officer at Ethical Capital, translating insights from clients, colleagues, and research into investment strategies that align with values.</p>",
                help_text="Current role description for What I Do Now panel",
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_1_description",
            field=models.CharField(
                blank=True,
                default="The best place to start understanding my personal journey",
                max_length=300,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_1_title",
            field=models.CharField(
                blank=True, default="How I Became an Active Manager", max_length=200
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_1_url",
            field=models.CharField(
                blank=True,
                default="/blog/how-i-became-an-active-manager/",
                max_length=500,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_2_description",
            field=models.CharField(
                blank=True,
                default="Perspective for long-term investors",
                max_length=300,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_2_title",
            field=models.CharField(
                blank=True, default="What Would a Recession Mean?", max_length=200
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_2_url",
            field=models.CharField(
                blank=True,
                default="/blog/what-would-a-recession-actually-mean-for-long-term-investors/",
                max_length=500,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_3_description",
            field=models.CharField(
                blank=True,
                default="Personal impact of economic changes",
                max_length=300,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_3_title",
            field=models.CharField(
                blank=True, default="What Does Inflation Mean to You?", max_length=200
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_3_url",
            field=models.CharField(
                blank=True,
                default="/blog/what-does-inflation-mean-to-you/",
                max_length=500,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_4_description",
            field=models.CharField(
                blank=True, default="Setting realistic expectations", max_length=300
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_4_title",
            field=models.CharField(
                blank=True,
                default="What Should You Expect When You're Investing?",
                max_length=200,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="featured_post_4_url",
            field=models.CharField(
                blank=True,
                default="/blog/what-should-you-expect-when-youre-investing/",
                max_length=500,
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="philosophy_content",
            field=wagtail.fields.RichTextField(
                blank=True,
                default="<p>Our process is oriented towards cumulative learningâ€”understanding companies, the communities they serve, and the consequences of their activities.</p>",
                help_text="Philosophy description for What I Do Now panel",
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="speaker_bio_url",
            field=models.URLField(
                blank=True,
                default="https://pub-324a685032214395a8bcad478c265d4b.r2.dev/Sloane-Ortel-Speaker-Bio.pdf",
                help_text="URL to speaker bio PDF",
            ),
        ),
        migrations.AddField(
            model_name="aboutpage",
            name="speaking_topics",
            field=wagtail.fields.RichTextField(
                blank=True,
                default="<ul><li>Aligning money with values for novice investors</li><li>Modern sustainable investing strategies</li><li>Ethical screening and portfolio construction</li><li>Investment management best practices</li></ul>",
                help_text="Topics covered in speaking engagements",
            ),
        ),
        migrations.AlterField(
            model_name="aboutpage",
            name="headshot_image",
            field=models.URLField(
                blank=True,
                default="https://dash.cloudflare.com/483f91afa8e97683223b69b57fd773ae/r2/default/buckets/images/objects/headshot%20sketch_slim.png",
                help_text="URL to headshot image",
            ),
        ),
        migrations.AlterField(
            model_name="blogpost",
            name="content",
            field=wagtail.fields.StreamField(
                [
                    (
                        "rich_text",
                        wagtail.blocks.RichTextBlock(
                            features=[
                                "h2",
                                "h3",
                                "h4",
                                "bold",
                                "italic",
                                "link",
                                "ol",
                                "ul",
                                "document-link",
                            ],
                            help_text="Rich text content with basic formatting",
                        ),
                    ),
                    (
                        "key_statistic",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "value",
                                    wagtail.blocks.CharBlock(
                                        help_text="The statistic value", max_length=50
                                    ),
                                ),
                                (
                                    "label",
                                    wagtail.blocks.CharBlock(
                                        help_text="Statistic label", max_length=100
                                    ),
                                ),
                                (
                                    "description",
                                    wagtail.blocks.TextBlock(
                                        help_text="Optional description", required=False
                                    ),
                                ),
                                (
                                    "ai_confidence",
                                    wagtail.blocks.DecimalBlock(
                                        decimal_places=2,
                                        default=0.0,
                                        max_digits=3,
                                        required=False,
                                    ),
                                ),
                                (
                                    "ai_context",
                                    wagtail.blocks.TextBlock(required=False),
                                ),
                                (
                                    "significance_level",
                                    wagtail.blocks.ChoiceBlock(
                                        choices=[
                                            ("high", "High Significance"),
                                            ("medium", "Medium Significance"),
                                            ("low", "Low Significance"),
                                        ],
                                        required=False,
                                    ),
                                ),
                                (
                                    "statistic_category",
                                    wagtail.blocks.ChoiceBlock(
                                        choices=[
                                            ("performance", "Performance/Returns"),
                                            ("valuation", "Valuation Metrics"),
                                            ("risk", "Risk Metrics"),
                                            ("allocation", "Portfolio Allocation"),
                                            ("fundamental", "Fundamental Analysis"),
                                            ("market", "Market Data"),
                                        ],
                                        required=False,
                                    ),
                                ),
                                (
                                    "visualization_type",
                                    wagtail.blocks.ChoiceBlock(
                                        choices=[
                                            ("bar", "Bar Chart"),
                                            (
                                                "performance_comparison",
                                                "Performance Comparison",
                                            ),
                                            ("allocation_pie", "Allocation Pie Chart"),
                                            ("trend_line", "Trend Line"),
                                            ("gauge", "Gauge/Meter"),
                                            ("callout", "Highlighted Callout"),
                                        ],
                                        required=False,
                                    ),
                                ),
                                (
                                    "time_period",
                                    wagtail.blocks.ChoiceBlock(
                                        choices=[
                                            ("daily", "Daily"),
                                            ("weekly", "Weekly"),
                                            ("monthly", "Monthly"),
                                            ("quarterly", "Quarterly"),
                                            ("annual", "Annual"),
                                            ("ytd", "Year-to-Date"),
                                            ("since_inception", "Since Inception"),
                                            ("custom", "Custom Period"),
                                        ],
                                        required=False,
                                    ),
                                ),
                                (
                                    "chart_title",
                                    wagtail.blocks.CharBlock(
                                        max_length=100, required=False
                                    ),
                                ),
                                (
                                    "chart_config",
                                    wagtail.blocks.TextBlock(required=False),
                                ),
                                (
                                    "related_entities",
                                    wagtail.blocks.ListBlock(
                                        wagtail.blocks.CharBlock(max_length=100),
                                        required=False,
                                    ),
                                ),
                            ],
                            icon="success",
                            label="Key Statistic",
                            template="public_site/blocks/key_statistic.html",
                        ),
                    ),
                    (
                        "table",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "caption",
                                    wagtail.blocks.CharBlock(
                                        help_text="Table title or caption",
                                        required=False,
                                    ),
                                ),
                                (
                                    "description",
                                    wagtail.blocks.RichTextBlock(
                                        help_text="Optional description or context",
                                        required=False,
                                    ),
                                ),
                                (
                                    "table",
                                    wagtail.contrib.table_block.blocks.TableBlock(
                                        help_text="Add table data - first row will be used as headers"
                                    ),
                                ),
                                (
                                    "source",
                                    wagtail.blocks.CharBlock(
                                        help_text="Data source attribution",
                                        required=False,
                                    ),
                                ),
                            ],
                            icon="table",
                            label="Data Table",
                            template="public_site/blocks/table_block.html",
                        ),
                    ),
                    ("image", wagtail.images.blocks.ImageChooserBlock()),
                    (
                        "callout",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "type",
                                    wagtail.blocks.ChoiceBlock(
                                        choices=[
                                            ("info", "Info"),
                                            ("warning", "Warning"),
                                            ("success", "Success"),
                                            ("error", "Error"),
                                        ]
                                    ),
                                ),
                                ("title", wagtail.blocks.CharBlock(required=False)),
                                ("content", wagtail.blocks.RichTextBlock()),
                            ],
                            icon="help",
                        ),
                    ),
                    (
                        "quote",
                        wagtail.blocks.StructBlock(
                            [
                                ("quote", wagtail.blocks.TextBlock()),
                                ("author", wagtail.blocks.CharBlock(required=False)),
                                ("source", wagtail.blocks.CharBlock(required=False)),
                            ],
                            icon="openquote",
                        ),
                    ),
                ],
                blank=True,
                help_text="Rich content with AI-enhanced statistics, charts, and analysis blocks",
                use_json_field=True,
            ),
        ),
    ]
